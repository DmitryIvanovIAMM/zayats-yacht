name: CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  APP_ENV: CI
  MONGODB_URI: 'mongodb://root:password@localhost:27019/test?authSource=admin'
  AUTH_SECRET: 'ZAYATS-YACHT-SECRET'
  NEXTAUTH_SECRET: 'ZAYATS-YACHT-SECRET'
  NEXTAUTH_URL: http://localhost:3000/api/auth
  SEND_EMAIL: 'false'
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_S3_OBJECT_BUCKET: ${{ secrets.AWS_S3_OBJECT_BUCKET }}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # 1. Build Next.js
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager" >&2
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: npm run build

      - name: Archive .next build
        run: tar -czf next-build.tar.gz .next

      - name: Upload .next artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: next-build.tar.gz
          retention-days: 1

  # 2. Unit tests (Jest)
  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    env:
      NODE_ENV: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Download .next artifact
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: .

      - name: Extract .next
        run: tar -xzf next-build.tar.gz

      - name: Run Unit Tests
        run: npm run test:unit

  # 3. API tests (Jest)
  api-tests:
    runs-on: ubuntu-latest
    needs: build
    env:
      NODE_ENV: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Download .next artifact
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: .

      - name: Extract .next
        run: tar -xzf next-build.tar.gz

      - name: Run API Tests
        run: npm run test:api

  # 4. E2E tests (Cypress)
  e2e-tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: .

      - name: Install dependencies
        run: npm ci

      - name: Run e2e tests with Cypress
        run: npm run e2e

